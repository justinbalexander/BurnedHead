# TODO: Check for required variables

libraries ?=
OBJECTS := $(addprefix $(BUILDDIR)/,$(objects))

-include $(OBJECTS:.o=.d)

.PHONY: all size clean

all: $(BUILDDIR) \
	$(BUILDDIR)/$(TARGET).elf \
	$(BUILDDIR)/$(TARGET).bin \
	size

$(BUILDDIR):
	$(Q)mkdir -p $@

$(BUILDDIR)/%.o: %.c
	@echo CC $<
	$(Q)mkdir -p $(dir $@)
	$(Q)$(CC) -x c -MMD -MP $(CFLAGS_CPU) $(CFLAGS_DEFS) $(CFLAGS) $(CFLAGS_INC) -c $< -o $@

$(BUILDDIR)/%.o: %.s
	@echo CC $<
	$(Q)mkdir -p $(dir $@)
	$(Q)$(CC) -x assembler -MMD -MP $(CFLAGS_CPU) $(CFLAGS_DEFS) $(CFLAGS) $(CFLAGS_INC) -c $< -o $@

$(BUILDDIR)/%.o: %.S
	@echo CC $<
	$(Q)mkdir -p $(dir $@)
	$(Q)$(CC) -x assembler-with-cpp -MMD -MP $(CFLAGS_CPU) $(CFLAGS_DEFS) $(CFLAGS) $(CFLAGS_INC) -c $< -o $@

$(BUILDDIR)/$(TARGET).elf: $(OBJECTS) $(libraries) $(linker-script)
	@echo LD $@
	$(Q)$(LD) $(CFLAGS_CPU) $(LDFLAGS) -T $(linker-script) $(OBJECTS) -Wl,--cref -Wl,-Map=$(@:.elf=.map) -Wl,--start-group $(libraries) -Wl,--end-group -o $@

$(BUILDDIR)/$(TARGET).bin: $(BUILDDIR)/$(TARGET).elf
	@echo Generating Binary: $@
	$(Q)$(OBJCOPY) --strip-debug --strip-unneeded $< -O binary $@

size: $(BUILDDIR)/$(TARGET).elf
	$(Q)$(SIZE) $<

clean:
	$(Q)rm -rf $(BUILDDIR)
